{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/contentScript.js"],"names":["window","AuraInspector","inspector","AuraInspectorContentScript","init","ContentScript","runtime","allowedPostMessageKeys","connect","onConnectCallback","chrome","onDisconnect","addListener","disconnect","bind","scriptElement","document","createElement","src","extension","getURL","async","defer","onload","parentNode","removeChild","head","documentElement","appendChild","removeEventListener","Handler_OnWindowMessage","onMessage","removeListener","Handler_OnRuntimeMessage","injectBootstrap","addEventListener","script","textContent","text","isConnected","event","data","action","postMessage"],"mappings":"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","file":"contentScript.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/contentScript.js\");\n","if(!window.AuraInspector) {\n\n    // Initialize\n    var inspector = new AuraInspectorContentScript();\n        inspector.init();\n\n    window.AuraInspector = window.AuraInspector || {};\n    window.AuraInspector.ContentScript = inspector;\n\n\n    function AuraInspectorContentScript(){\n        var runtime = null;\n        var allowedPostMessageKeys = {\n            \"AuraInspector:publishbatch\": true,\n            \"AuraInspector:publish\": true,\n            \"AuraInspector:bootstrap\": true\n        };\n\n        /**\n         * Initializes the connection to the chrome extensions runtime\n         * Happens when we include the content script on the page.\n         */\n        this.connect = function (onConnectCallback) {\n            // Don't setup everything again, that wouldn't make sense\n            if(runtime) { return; }\n            runtime = chrome.runtime.connect();\n            runtime.onDisconnect.addListener(this.disconnect.bind(this));\n\n            // Inject the script that will talk with the $A services.\n            var scriptElement = window.document.createElement(\"script\");\n            //scriptElement.src = chrome.extension.getURL('src/AuraInspectorInjectedScript.js');\n            scriptElement.src = chrome.extension.getURL('/dist/LightningInspectorInjectedScript.js');\n            scriptElement.async = scriptElement.defer = false;\n            scriptElement.onload = function() {\n                this.parentNode.removeChild(this);\n                if(onConnectCallback) {\n                    onConnectCallback();\n                }\n            };\n            (document.head||document.documentElement).appendChild(scriptElement);\n        };\n\n        /**\n         * Happens when you close the tab\n         */\n        this.disconnect = function() {\n\n            window.removeEventListener(\"message\", Handler_OnWindowMessage);\n            runtime.onMessage.removeListener(Handler_OnRuntimeMessage);\n            runtime = null;\n        };\n\n        this.init = function(){\n            this.connect(() => {\n                this.injectBootstrap();\n            });\n\n            // Simply catches publish commands and passes them to the AuraInspector\n            window.addEventListener(\"message\", Handler_OnWindowMessage);\n\n            // Catches all runtime commands and passes them to the injected script\n            runtime.onMessage.addListener(Handler_OnRuntimeMessage);\n        };\n\n\n\n        this.injectBootstrap = function() {\n            var script = document.createElement(\"script\");\n            script.textContent = script.text = `\n                /**  Aura Inspector Script, ties into $A.initAsync and $A.initConfig to initialize the inspector as soon as possible. **/\n                (function(global){\n                    var injectedScript = Symbol.for('AuraDevTools');\n                    function wrap(obj, original, before, after) {/*from 204 and beyond, we no longer need this wrap*/\n                        return function() {\n                            if(before) before.apply(obj, arguments);\n                            var returnValue = original.apply(obj, arguments);\n                            if(after) after.apply(obj, arguments);\n                            return returnValue;\n                        }\n                    }\n                    var initialized = false;\n                    function notifyDevTools() {\n                        if(initialized) { return; }\n                        // Try to bootstrap, this way all the actions get caught as postMessage is async.\n                        window[injectedScript].Inspector.instrument();\n                        window.postMessage({\n                            action  : \"AuraInspector:publish\",\n                            key: \"AuraInspector:OnAuraInitialized\",\n                            data: \"ContentScript: notifyDevTools()\"\n                        }, window.location.origin);\n                        // Only do once.\n                        initialized = true;\n                    }\n\n                    // Since we were injected, Aura could already be available. If so, let the devtools know.\n                    if(!global.$A || !(global.$A.getContext && global.$A.getContext())) {\n                        var _Aura = global.Aura;\n                        Object.defineProperty(global, \"Aura\", {\n                            enumerable: true,\n                            configurable: true,\n                            get: function() { return _Aura; },\n                            set: function(val) {\n                                val.beforeFrameworkInit = val.beforeFrameworkInit || [];\n                                val.beforeFrameworkInit.push(notifyDevTools);\n                                _Aura = val;\n                            }\n                        });\n                        var _$A = global.$A;\n                        Object.defineProperty(global, \"$A\", {/*from 204 and beyond, we no longer need this set*/\n                            enumerable: true,\n                            configurable: true,\n                            get: function() { return _$A; },\n                            set: function(val) {\n                                if(val && val.initAsync) {\n                                    val.initAsync = wrap(val, val.initAsync, notifyDevTools);\n                                }\n                                if(val && val.initConfig) {\n                                    val.initConfig = wrap(val, val.initConfig, notifyDevTools);\n                                }\n\n                                _$A = val;\n\n                            }\n                        });\n                    }\n                })(this);\n            `;\n            document.documentElement.appendChild(script);\n        };\n\n\n        this.isConnected = function() {\n            return !!runtime;\n        };\n\n        function Handler_OnWindowMessage(event){\n            // Don't handle messages from myself.\n            if(runtime && allowedPostMessageKeys[event.data.action]) {\n                //console.log(\"ContentScript-ToRuntime:\", event.data.action, event.data);\n                runtime.postMessage(event.data);\n            } else {\n                //console.log(\"NotAllowedContentScript:\", event.data.action, event.data);\n            }\n        }\n\n        function Handler_OnRuntimeMessage(event){\n            if(event && event.data && allowedPostMessageKeys[event.data.action]) {\n                //console.log(\"ContentScript-FromRuntime:\", event.data.action, event.data);\n                window.postMessage(event.data);\n            }\n        }\n\n    }\n}"],"sourceRoot":""}